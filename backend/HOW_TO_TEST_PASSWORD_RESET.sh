#!/bin/bash

echo "üöÄ COMPLETE TESTING GUIDE FOR PASSWORD RESET"
echo "=============================================="
echo ""

echo "üìã PREREQUISITES:"
echo "=================="
echo "1. ‚úÖ Spring Boot application running on port 5001"
echo "2. ‚úÖ Database connected and running"
echo "3. ‚úÖ Email service configured (check application.properties)"
echo "4. ‚úÖ Have a test customer account or create one"
echo ""

echo "üîß STEP-BY-STEP TESTING:"
echo "========================"
echo ""

echo "STEP 1: Start the Backend Application"
echo "-------------------------------------"
echo "cd /home/prince/tech-care/backend"
echo "mvn spring-boot:run"
echo ""
echo "Wait for: 'Started TechCareRwandaApplication in X seconds'"
echo ""

echo "STEP 2: Test the Forgot Password Endpoint"
echo "-----------------------------------------"
echo "# Use your actual email address to receive the reset token"
echo "curl -X POST http://localhost:5001/api/v1/customer/forgot-password \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -d '{"
echo "    \"email\": \"mugishaprince395@gmail.com\""
echo "  }'"
echo ""
echo "Expected Response: 'If an account with this email exists, a password reset link has been sent.'"
echo ""

echo "STEP 3: Check Your Email"
echo "------------------------"
echo "üìß Look for an email from TechCare with subject: 'TechCare - Password Reset Request'"
echo "üìß Copy the reset token from the email (it's a long UUID string)"
echo ""

echo "STEP 4: Test the Reset Password Endpoint"
echo "----------------------------------------"
echo "# Replace YOUR_RESET_TOKEN with the actual token from your email"
echo "curl -X POST http://localhost:5001/api/v1/customer/reset-password \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -d '{"
echo "    \"resetToken\": \"YOUR_RESET_TOKEN\","
echo "    \"newPassword\": \"NewSecurePassword123!\","
echo "    \"confirmPassword\": \"NewSecurePassword123!\""
echo "  }'"
echo ""
echo "Expected Response: 'Password reset successfully. You can now log in with your new password.'"
echo ""

echo "STEP 5: Test Login with New Password"
echo "-----------------------------------"
echo "curl -X POST http://localhost:5001/api/v1/customer/login \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -d '{"
echo "    \"email\": \"mugishaprince395@gmail.com\","
echo "    \"password\": \"NewSecurePassword123!\""
echo "  }'"
echo ""
echo "Expected Response: Should return a JWT token"
echo ""

echo "ü§ñ AUTOMATED TESTING:"
echo "====================="
echo ""

echo "Option 1: Basic Password Reset Test"
echo "-----------------------------------"
echo "./test_password_reset.sh"
echo ""

echo "Option 2: Complete Flow Test"
echo "----------------------------"
echo "./test_complete_password_reset.sh"
echo ""

echo "Option 3: Custom Test with Your Email"
echo "-------------------------------------"
echo "# Edit the email in the script first"
echo "nano test_complete_password_reset.sh"
echo "# Change EMAIL=\"mugishaprince395@gmail.com\" to your email"
echo "# Then run:"
echo "./test_complete_password_reset.sh"
echo ""

echo "üîç TROUBLESHOOTING:"
echo "==================="
echo ""

echo "Issue 1: 'Connection refused'"
echo "----------------------------"
echo "‚úÖ Solution: Make sure Spring Boot is running"
echo "   cd /home/prince/tech-care/backend"
echo "   mvn spring-boot:run"
echo ""

echo "Issue 2: 'Email not received'"
echo "----------------------------"
echo "‚úÖ Check spam folder"
echo "‚úÖ Check application.properties email configuration"
echo "‚úÖ Check console logs for email errors"
echo "‚úÖ Use database query to get token:"
echo "   SELECT reset_password_token FROM customer WHERE email = 'your@email.com';"
echo ""

echo "Issue 3: 'Invalid token' error"
echo "------------------------------"
echo "‚úÖ Check token hasn't expired (24 hours)"
echo "‚úÖ Copy token exactly from email (no extra spaces)"
echo "‚úÖ Make sure token exists in database"
echo ""

echo "Issue 4: 'Validation errors'"
echo "----------------------------"
echo "‚úÖ Password must be at least 8 characters"
echo "‚úÖ newPassword and confirmPassword must match"
echo "‚úÖ Email must be valid format"
echo ""

echo "üîß MANUAL TESTING COMMANDS:"
echo "============================"
echo ""

# Create easy-to-copy commands
echo "# 1. Test forgot password (replace email):"
echo "curl -X POST http://localhost:5001/api/v1/customer/forgot-password -H 'Content-Type: application/json' -d '{\"email\": \"YOUR_EMAIL\"}'"
echo ""

echo "# 2. Test reset password (replace token):"
echo "curl -X POST http://localhost:5001/api/v1/customer/reset-password -H 'Content-Type: application/json' -d '{\"resetToken\": \"YOUR_TOKEN\", \"newPassword\": \"NewPass123!\", \"confirmPassword\": \"NewPass123!\"}'"
echo ""

echo "# 3. Test login with new password:"
echo "curl -X POST http://localhost:5001/api/v1/customer/login -H 'Content-Type: application/json' -d '{\"email\": \"YOUR_EMAIL\", \"password\": \"NewPass123!\"}'"
echo ""

echo "üì± POSTMAN TESTING:"
echo "==================="
echo ""
echo "Collection: Password Reset Tests"
echo ""
echo "Request 1: Forgot Password"
echo "- Method: POST"
echo "- URL: http://localhost:5001/api/v1/customer/forgot-password"
echo "- Headers: Content-Type: application/json"
echo "- Body (JSON): {\"email\": \"your@email.com\"}"
echo ""
echo "Request 2: Reset Password"
echo "- Method: POST"
echo "- URL: http://localhost:5001/api/v1/customer/reset-password"
echo "- Headers: Content-Type: application/json"
echo "- Body (JSON): {"
echo "    \"resetToken\": \"token-from-email\","
echo "    \"newPassword\": \"NewPass123!\","
echo "    \"confirmPassword\": \"NewPass123!\""
echo "  }"
echo ""
echo "Request 3: Login Test"
echo "- Method: POST"
echo "- URL: http://localhost:5001/api/v1/customer/login"
echo "- Headers: Content-Type: application/json"
echo "- Body (JSON): {\"email\": \"your@email.com\", \"password\": \"NewPass123!\"}"
echo ""

echo "üéØ QUICK START TESTING:"
echo "======================="
echo ""
echo "1. Make sure backend is running:"
echo "   cd /home/prince/tech-care/backend && mvn spring-boot:run"
echo ""
echo "2. Run the automated test:"
echo "   ./test_password_reset.sh"
echo ""
echo "3. Check your email and follow the instructions!"
echo ""

echo "‚úÖ TESTING COMPLETE!"
echo "===================="
echo "Once you've tested all scenarios, you'll have a fully functional"
echo "password reset system that customers can use safely."
echo ""
